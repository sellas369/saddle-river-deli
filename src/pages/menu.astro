---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Menuboard from '../components/Menuboard.svelte';

type MenuboardSchema = CollectionEntry<'menuboard'>['data'];
type MenuSchema = CollectionEntry<'menu'>['data'];

interface Menuboard extends MenuboardSchema {
  board: Array<
    MenuSchema & {
      double: boolean;
    }
  >;
}

const menus = await getCollection('menu');

const menuboards = (await getCollection('menuboard'))
  .sort((a, b) => a.data.title.localeCompare(b.data.title))
  .sort((a, b) => {
    if (a.data.weight < b.data.weight) return -1;
    if (a.data.weight > b.data.weight) return 1;
    return 0;
  });

const menuCollection = menuboards.map((m) => {
  const content: Menuboard = m.data;

  content.board = m.data.board
    .map((b) => menus.find((i) => i.slug === b.id))
    .map((b) => {
      const data = b.data;
      const hasRegular = data.items.find((i) => i.regular !== null);
      const hasLarge = data.items.find((i) => i.large !== null);
      data.double = hasRegular !== undefined && hasLarge !== undefined;

      return data;
    });

  return content;
});
---

<Layout>
  <article>
    {menuCollection.map((m) => <Menuboard item={m} />)}
  </article>
</Layout>

<style lang='scss'>
  .type {
    margin: 1rem;
    max-width: 80ch;
  }

  article {
    padding: 1rem;
  }
</style>
